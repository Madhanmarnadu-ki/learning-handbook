Array
------
1.	Concept
------------
⦁	Linear Data Structure
⦁	stores fixed-size sequence of elements of same data type.
⦁	stored in contiguous memory location.
⦁	index based access
⦁	allow random access

2. Time Complexity
-------------------
⦁	Access 		-> O(1)
⦁	Update 		-> O(1)
⦁	insert (end) 	-> O(1)
⦁	insert (middle) 	-> O(n)
⦁	delete (end) 	-> O(1)
⦁	delete (middle) 	-> O(n)

3. Types of Array
------------------
⦁	One-Dimensional Array
⦁	Two-Dimensional Array
⦁	Multi-Dimensional Array
⦁	Jagged Array (Array of Arrays)

4. Must-Know Problems & Algorithms
-----------------------------------
Basics
-------
⦁	Traverse / Print / Reverse an array
⦁	Find max / min / second largest
⦁	Sum & avg of elements

Searching
----------
⦁	Linear Search -> O(n)
⦁	Binary Search (sorted arrays) -> O(log n)
⦁	Variations: first/last occurance, count of occurances

Rearrangement
--------------
⦁	Reverse array in-place (two pointers)
⦁	Rotate array (left/right/k steps)
⦁	Move zeros to end / segregate positivies & negativies

Prefix/Sufix
-------------
⦁	Prefix sum array (range queries)
⦁	Equilibrium index (sum left == sum right)
⦁	Maximum subarray sum (Kadane's Algorithm)

Two Pointers / Sliding Window
------------------------------
⦁	Pair with given sum (Two sum sorted)
⦁	Container With Most Water (max area)
⦁	Longest subarray with sum <= K
⦁	Sliding window max/min

Sorting based
--------------
⦁	Sort 0s, 1s, 2s (Dutch National Flag)
⦁	Merge two sorted arrays
⦁	Find k-th smallest/largest (QuickSelect, Heap)

Advanced / Interview Favorites
-------------------------------
⦁	Subarray sum equal to k (hash map)
⦁	Longest consective sequence(hash set)
⦁	Majority element (Boyer-Moore Voting)
⦁	Trapping Rain Water
⦁	Product of array except self
⦁	Maximum circular subarray sum 

5. Key Patterns
----------------
⦁	Sliding Window
⦁	Two Pointers
⦁	Prefix Sum / Cumulative Sum
⦁	Hashing/Frequency Map
⦁	Sorting + Binary Search
⦁	Kadane's Algorithm
⦁	Cyclic / Index Manipulation
⦁	Greedy / Partitioning
⦁	Matrix/2D Array Patterns
⦁	Rearrangement & Partitioning

